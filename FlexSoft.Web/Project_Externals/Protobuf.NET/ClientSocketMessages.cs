// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ClientSocketMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ClientSocketMessages.proto</summary>
public static partial class ClientSocketMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for ClientSocketMessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientSocketMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChpDbGllbnRTb2NrZXRNZXNzYWdlcy5wcm90byJoChFNZXNzYWdlRnJvbUNs",
          "aWVudBIfCgpjbGllbnRUeXBlGAEgASgOMgsuQ2xpZW50VHlwZRInCg1hcmR1",
          "aW5vQWN0aW9uGAIgASgLMg4uQXJkdWlub0FjdGlvbkgAQgkKB21lc3NhZ2Ui",
          "dgoNQXJkdWlub0FjdGlvbhIjCgthcmR1aW5vSm9pbhgBIAEoCzIMLkFyZHVp",
          "bm9Kb2luSAASNQoUYXJkdWlub1dvcmtvdXRBY3Rpb24YAiABKAsyFS5BcmR1",
          "aW5vV29ya291dEFjdGlvbkgAQgkKB21lc3NhZ2UiMgoLQXJkdWlub0pvaW4S",
          "EQoJYXJkdWlub0lkGAEgASgFEhAKCHJmSWRDYXJkGAIgASgFIhYKFEFyZHVp",
          "bm9Xb3Jrb3V0QWN0aW9uKjAKCkNsaWVudFR5cGUSEgoOQVJEVUlOT19DTElF",
          "TlQQABIOCgpXRUJfQ0xJRU5UEAFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ClientType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MessageFromClient), global::MessageFromClient.Parser, new[]{ "ClientType", "ArduinoAction" }, new[]{ "Message" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArduinoAction), global::ArduinoAction.Parser, new[]{ "ArduinoJoin", "ArduinoWorkoutAction" }, new[]{ "Message" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArduinoJoin), global::ArduinoJoin.Parser, new[]{ "ArduinoId", "RfIdCard" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArduinoWorkoutAction), global::ArduinoWorkoutAction.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ClientType {
  [pbr::OriginalName("ARDUINO_CLIENT")] ArduinoClient = 0,
  [pbr::OriginalName("WEB_CLIENT")] WebClient = 1,
}

#endregion

#region Messages
public sealed partial class MessageFromClient : pb::IMessage<MessageFromClient> {
  private static readonly pb::MessageParser<MessageFromClient> _parser = new pb::MessageParser<MessageFromClient>(() => new MessageFromClient());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MessageFromClient> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientSocketMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageFromClient() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageFromClient(MessageFromClient other) : this() {
    clientType_ = other.clientType_;
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoAction:
        ArduinoAction = other.ArduinoAction.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageFromClient Clone() {
    return new MessageFromClient(this);
  }

  /// <summary>Field number for the "clientType" field.</summary>
  public const int ClientTypeFieldNumber = 1;
  private global::ClientType clientType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientType ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  /// <summary>Field number for the "arduinoAction" field.</summary>
  public const int ArduinoActionFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArduinoAction ArduinoAction {
    get { return messageCase_ == MessageOneofCase.ArduinoAction ? (global::ArduinoAction) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ArduinoAction;
    }
  }

  private object message_;
  /// <summary>Enum of possible cases for the "message" oneof.</summary>
  public enum MessageOneofCase {
    None = 0,
    ArduinoAction = 2,
  }
  private MessageOneofCase messageCase_ = MessageOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageOneofCase MessageCase {
    get { return messageCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMessage() {
    messageCase_ = MessageOneofCase.None;
    message_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MessageFromClient);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MessageFromClient other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientType != other.ClientType) return false;
    if (!object.Equals(ArduinoAction, other.ArduinoAction)) return false;
    if (MessageCase != other.MessageCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (messageCase_ == MessageOneofCase.ArduinoAction) hash ^= ArduinoAction.GetHashCode();
    hash ^= (int) messageCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClientType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ClientType);
    }
    if (messageCase_ == MessageOneofCase.ArduinoAction) {
      output.WriteRawTag(18);
      output.WriteMessage(ArduinoAction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
    }
    if (messageCase_ == MessageOneofCase.ArduinoAction) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArduinoAction);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MessageFromClient other) {
    if (other == null) {
      return;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoAction:
        if (ArduinoAction == null) {
          ArduinoAction = new global::ArduinoAction();
        }
        ArduinoAction.MergeFrom(other.ArduinoAction);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          clientType_ = (global::ClientType) input.ReadEnum();
          break;
        }
        case 18: {
          global::ArduinoAction subBuilder = new global::ArduinoAction();
          if (messageCase_ == MessageOneofCase.ArduinoAction) {
            subBuilder.MergeFrom(ArduinoAction);
          }
          input.ReadMessage(subBuilder);
          ArduinoAction = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class ArduinoAction : pb::IMessage<ArduinoAction> {
  private static readonly pb::MessageParser<ArduinoAction> _parser = new pb::MessageParser<ArduinoAction>(() => new ArduinoAction());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArduinoAction> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientSocketMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoAction() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoAction(ArduinoAction other) : this() {
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoJoin:
        ArduinoJoin = other.ArduinoJoin.Clone();
        break;
      case MessageOneofCase.ArduinoWorkoutAction:
        ArduinoWorkoutAction = other.ArduinoWorkoutAction.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoAction Clone() {
    return new ArduinoAction(this);
  }

  /// <summary>Field number for the "arduinoJoin" field.</summary>
  public const int ArduinoJoinFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArduinoJoin ArduinoJoin {
    get { return messageCase_ == MessageOneofCase.ArduinoJoin ? (global::ArduinoJoin) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ArduinoJoin;
    }
  }

  /// <summary>Field number for the "arduinoWorkoutAction" field.</summary>
  public const int ArduinoWorkoutActionFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArduinoWorkoutAction ArduinoWorkoutAction {
    get { return messageCase_ == MessageOneofCase.ArduinoWorkoutAction ? (global::ArduinoWorkoutAction) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ArduinoWorkoutAction;
    }
  }

  private object message_;
  /// <summary>Enum of possible cases for the "message" oneof.</summary>
  public enum MessageOneofCase {
    None = 0,
    ArduinoJoin = 1,
    ArduinoWorkoutAction = 2,
  }
  private MessageOneofCase messageCase_ = MessageOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageOneofCase MessageCase {
    get { return messageCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMessage() {
    messageCase_ = MessageOneofCase.None;
    message_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArduinoAction);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArduinoAction other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ArduinoJoin, other.ArduinoJoin)) return false;
    if (!object.Equals(ArduinoWorkoutAction, other.ArduinoWorkoutAction)) return false;
    if (MessageCase != other.MessageCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (messageCase_ == MessageOneofCase.ArduinoJoin) hash ^= ArduinoJoin.GetHashCode();
    if (messageCase_ == MessageOneofCase.ArduinoWorkoutAction) hash ^= ArduinoWorkoutAction.GetHashCode();
    hash ^= (int) messageCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (messageCase_ == MessageOneofCase.ArduinoJoin) {
      output.WriteRawTag(10);
      output.WriteMessage(ArduinoJoin);
    }
    if (messageCase_ == MessageOneofCase.ArduinoWorkoutAction) {
      output.WriteRawTag(18);
      output.WriteMessage(ArduinoWorkoutAction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (messageCase_ == MessageOneofCase.ArduinoJoin) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArduinoJoin);
    }
    if (messageCase_ == MessageOneofCase.ArduinoWorkoutAction) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArduinoWorkoutAction);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArduinoAction other) {
    if (other == null) {
      return;
    }
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoJoin:
        if (ArduinoJoin == null) {
          ArduinoJoin = new global::ArduinoJoin();
        }
        ArduinoJoin.MergeFrom(other.ArduinoJoin);
        break;
      case MessageOneofCase.ArduinoWorkoutAction:
        if (ArduinoWorkoutAction == null) {
          ArduinoWorkoutAction = new global::ArduinoWorkoutAction();
        }
        ArduinoWorkoutAction.MergeFrom(other.ArduinoWorkoutAction);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::ArduinoJoin subBuilder = new global::ArduinoJoin();
          if (messageCase_ == MessageOneofCase.ArduinoJoin) {
            subBuilder.MergeFrom(ArduinoJoin);
          }
          input.ReadMessage(subBuilder);
          ArduinoJoin = subBuilder;
          break;
        }
        case 18: {
          global::ArduinoWorkoutAction subBuilder = new global::ArduinoWorkoutAction();
          if (messageCase_ == MessageOneofCase.ArduinoWorkoutAction) {
            subBuilder.MergeFrom(ArduinoWorkoutAction);
          }
          input.ReadMessage(subBuilder);
          ArduinoWorkoutAction = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class ArduinoJoin : pb::IMessage<ArduinoJoin> {
  private static readonly pb::MessageParser<ArduinoJoin> _parser = new pb::MessageParser<ArduinoJoin>(() => new ArduinoJoin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArduinoJoin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientSocketMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoJoin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoJoin(ArduinoJoin other) : this() {
    arduinoId_ = other.arduinoId_;
    rfIdCard_ = other.rfIdCard_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoJoin Clone() {
    return new ArduinoJoin(this);
  }

  /// <summary>Field number for the "arduinoId" field.</summary>
  public const int ArduinoIdFieldNumber = 1;
  private int arduinoId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ArduinoId {
    get { return arduinoId_; }
    set {
      arduinoId_ = value;
    }
  }

  /// <summary>Field number for the "rfIdCard" field.</summary>
  public const int RfIdCardFieldNumber = 2;
  private int rfIdCard_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RfIdCard {
    get { return rfIdCard_; }
    set {
      rfIdCard_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArduinoJoin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArduinoJoin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ArduinoId != other.ArduinoId) return false;
    if (RfIdCard != other.RfIdCard) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ArduinoId != 0) hash ^= ArduinoId.GetHashCode();
    if (RfIdCard != 0) hash ^= RfIdCard.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ArduinoId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ArduinoId);
    }
    if (RfIdCard != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RfIdCard);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ArduinoId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArduinoId);
    }
    if (RfIdCard != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfIdCard);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArduinoJoin other) {
    if (other == null) {
      return;
    }
    if (other.ArduinoId != 0) {
      ArduinoId = other.ArduinoId;
    }
    if (other.RfIdCard != 0) {
      RfIdCard = other.RfIdCard;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ArduinoId = input.ReadInt32();
          break;
        }
        case 16: {
          RfIdCard = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ArduinoWorkoutAction : pb::IMessage<ArduinoWorkoutAction> {
  private static readonly pb::MessageParser<ArduinoWorkoutAction> _parser = new pb::MessageParser<ArduinoWorkoutAction>(() => new ArduinoWorkoutAction());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArduinoWorkoutAction> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientSocketMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoWorkoutAction() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoWorkoutAction(ArduinoWorkoutAction other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoWorkoutAction Clone() {
    return new ArduinoWorkoutAction(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArduinoWorkoutAction);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArduinoWorkoutAction other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArduinoWorkoutAction other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
